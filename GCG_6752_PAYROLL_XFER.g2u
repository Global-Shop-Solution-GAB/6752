Program.Sub.Preflight.Start
V.Global.sDir.Declare
V.Global.sPath.Declare
V.Global.sFile.Declare
V.Global.sDelFile.Declare
V.Global.bError.Declare(Boolean)
V.Global.bUnattended.Declare(Boolean)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout
'TJS, Apr 2021 - Updated to include a "Clock Type" to determine if the employee is clocking in or out from lunch.

'TJS, Mar 2021
'MUM Industries.
'Custom Paycom Integration and Export

'AJC, May 2022
'Modification for PTMW
'BUSINESS CASE: The customer is integrating their payroll with Paycom.  They need a solution that passes clock-in and clock-out times every hour minutes to a SFTP site for Paycom to upload

'Program is called from watchdog every hour.  The watchdog is called from the task scheduler every hour.

F.Intrinsic.Control.CallSub(ChkDir)
F.Intrinsic.Control.CallSub(Data)
F.Intrinsic.Control.CallSub(FileUpload)

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6752", "ProjectTitle", "Paycom Data Upload", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.ChkDir.Start
F.Intrinsic.Control.Try
V.Local.sDir.Declare
V.Local.bChk.Declare

F.Intrinsic.String.Build("{0}\CUSTOM\6752\Transfer_to_Paycom",V.Caller.GlobalDir,V.Global.sDir)

F.Intrinsic.File.DirExists(V.Global.sDir,V.Local.bChk)

F.Intrinsic.Control.If(V.Local.bChk,=,False)
	F.Intrinsic.File.CreateDir(V.Global.sDir)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6752", "ProjectTitle", "Paycom Data Upload", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.ChkDir.End

Program.Sub.Data.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare
V.Local.sChgDate.Declare
V.Local.sChgTime.Declare
V.Local.sDTDate.Declare
V.Local.sYYYY.Declare
V.Local.sMM.Declare
V.Local.sDD.Declare
V.Local.sDTTime.Declare
V.Local.sHH.Declare
V.Local.sNN.Declare
V.Local.sFile.Declare
V.Local.sRunDate.Declare
V.Local.sRunTime.Declare
V.Local.iCnt.Declare
V.Local.sDateTime.Declare
V.Local.dDate.Declare(Date)

F.ODBC.Connection!conts.OpenCompanyConnection(1000)

V.Local.sSQL.Set("Select * from GCG_6752_SETTINGS where REC_ID = '1'")
F.ODBC.Connection!conts.ExecuteAndReturn(V.Local.sSQL,V.Local.sSQL)
F.Intrinsic.Control.If(V.Local.sSQL.Trim,=,"")
	F.Intrinsic.UI.Msgbox("Remote Paycom settings not established (6752). Program ending.","ERROR!")
	F.ODBC.Connection!conts.Close
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndIf

V.Local.sSQL.Set("Select DATE_LAST_CHG,TIME_LAST_CHG from GCG_6752_SETTINGS where REC_ID = '1'")
F.ODBC.Connection!conts.ExecuteAndReturn(V.Local.sSQL,V.Local.sSQL)
F.Intrinsic.String.Split(V.Local.sSQL,"*!*",V.Local.sSQL)

F.Intrinsic.Control.If(V.Local.sSQL.Trim,=,"")
	F.Intrinsic.Date.DateAdd("d", -1, V.Ambient.Date, V.Local.dDate)
	V.Local.sChgDate.Set(V.Local.dDate.PervasiveDate)
	F.Intrinsic.String.Format(V.Local.sChgDate,"YYYYMMDD",V.Local.sChgDate)
	F.Intrinsic.String.Build("Select min(TIME_LAST_CHG) as TIME_LAST_CHG from TIME_ATTENDANCE where DATE_LAST_CHG = '{0}';",V.Local.sChgDate,V.Local.sSQL)
	F.ODBC.Connection!conts.ExecuteAndReturn(V.Local.sSQL,V.Local.sSQL)
	
	V.Local.sChgTime.Set(V.Local.sSQL.Trim)
F.Intrinsic.Control.Else
	V.Local.sChgDate.Set(V.Local.sSQL(0))
	V.Local.sChgTime.Set(V.Local.sSQL(1))
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.DataTable.dtTA.Exists)
	F.Data.Datatable.Close("dtTA")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.DataTable.dtBC.Exists)
	F.Data.Datatable.Close("dtBC")
F.Intrinsic.Control.EndIf

'F.Intrinsic.Control.If(V.Caller.CompanyCode,=,"GSS")
'	V.Local.sChgDate.Set("20210420")
'	V.Local.sChgTime.Set("110000")
'F.Intrinsic.Control.EndIf

'F.Intrinsic.String.Concat(V.Local.sChgDate,V.Local.sChgTime,V.Local.sDateTime)
V.Local.sDateTime.Set(v.Local.sChgDate)
Function.Intrinsic.Debug.InvokeDebugger
Function.Intrinsic.Debug.Stop

'Time and attendance
'F.Intrinsic.String.Build("Select A.EMPLOYEE as 'Employee',A.CHARGE_DATE,'01/01/1900' as 'Date',If(A.DATE_OUT = '00000000','IN','OUT') as 'Punch Type',If(A.DATE_OUT = '00000000',Left(TIME_IN,4),Left(TIME_OUT,4)) as CHARGE_TIME,'00:00' as 'Time',A.SHIFT,If(A.DATE_OUT = '00000000',IN_TS_MIN,OUT_TS_MIN) as 'TS_MIN' from TIME_ATTENDANCE A left join V_EMPLOYEE_MSTR B on A.EMPLOYEE = B.EMPLOYEE where B.CONTRACT_EMP <> 'Y' and A.DATE_LAST_CHG+A.TIME_LAST_CHG >= '{0}' and A.LAST_CHG_PROG <> 'JB033A';",V.Local.sDateTime,V.Local.sSQL)

'F.Intrinsic.String.Build("Select A.EMPLOYEE as 'Employee',A.CHARGE_DATE,'01/01/1900' as 'Date', 'IN' as 'Punch Type', Left(TIME_IN,4) as CHARGE_TIME,'00:00' as 'Time', A.SHIFT, A.IN_TS_MIN as 'TS_MIN' from TIME_ATTENDANCE A left join  V_EMPLOYEE_MSTR B on A.EMPLOYEE = B.EMPLOYEE where B.CONTRACT_EMP <> 'Y' and A.DATE_LAST_CHG+A.TIME_LAST_CHG >= '{0}' and A.LAST_CHG_PROG <> 'JB033A' UNION Select A.EMPLOYEE as 'Employee',A.CHARGE_DATE,'01/01/1900' as 'Date', 'OUT' as 'Punch Type',Left(A.TIME_OUT,4) as CHARGE_TIME,'00:00' as 'Time', A.SHIFT, A.OUT_TS_MIN as 'TS_MIN'from TIME_ATTENDANCE A left join V_EMPLOYEE_MSTR B  on A.EMPLOYEE = B.EMPLOYEE where B.CONTRACT_EMP <> 'Y' and A.DATE_LAST_CHG+A.TIME_LAST_CHG >= '{0}' and A.LAST_CHG_PROG<> 'JB033A' and CHARGE_TIME <> '0000';",V.Local.sDateTime,V.Local.sSQL)

F.Intrinsic.String.Build("Select A.EMPLOYEE as 'Employee',A.CHARGE_DATE,'01/01/1900' as 'Date', 'IN' as 'Punch Type', Left(TIME_IN,4) as CHARGE_TIME,'00:00' as 'Time', A.SHIFT, A.IN_TS_MIN as 'TS_MIN' from TIME_ATTENDANCE A left join  V_EMPLOYEE_MSTR B on A.EMPLOYEE = B.EMPLOYEE where B.CONTRACT_EMP <> 'Y' and A.DATE_LAST_CHG >= '{0}' AND A.DATE_LAST_CHG < '{1}' and A.LAST_CHG_PROG <> 'JB033A' UNION Select A.EMPLOYEE as 'Employee',A.CHARGE_DATE,'01/01/1900' as 'Date', 'OUT' as 'Punch Type',Left(A.TIME_OUT,4) as CHARGE_TIME,'00:00' as 'Time', A.SHIFT, A.OUT_TS_MIN as 'TS_MIN'from TIME_ATTENDANCE A left join V_EMPLOYEE_MSTR B  on A.EMPLOYEE = B.EMPLOYEE where B.CONTRACT_EMP <> 'Y' and A.DATE_LAST_CHG >= '{0}' AND A.DATE_LAST_CHG < '{1}' and A.LAST_CHG_PROG<> 'JB033A' and CHARGE_TIME <> '0000';",V.Local.sDateTime, V.Ambient.Date.FormatYYYYMMDD, V.Local.sSQL)

F.Data.Datatable.CreateFromSQL("dtTA","conts",V.Local.sSQL)

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtTA.RowCount--,1)
	F.Intrinsic.String.Left(V.DataTable.dtTA(V.Local.iCnt).CHARGE_DATE!FieldValTrim,4,V.Local.sYYYY)
	F.Intrinsic.String.Mid(V.DataTable.dtTA(V.Local.iCnt).CHARGE_DATE!FieldValTrim,5,2,V.Local.sMM)
	F.Intrinsic.String.Right(V.DataTable.dtTA(V.Local.iCnt).CHARGE_DATE!FieldValTrim,2,V.Local.sDD)
	F.Intrinsic.String.Build("{0}/{1}/{2}",V.Local.sMM,V.Local.sDD,V.Local.sYYYY,V.Local.sDTDate)
	F.Intrinsic.Control.If(V.DataTable.dtTA(V.Local.iCnt).SHIFT!FieldValTrim,=,3,"AND",V.DataTable.dtTA(V.Local.iCnt).Punch Type!FieldValTrim,=,"IN")
		F.Intrinsic.Date.DateAdd("d",-1,V.Local.sDTDate,V.Local.sDTDate)
		F.Intrinsic.String.Split(V.Local.sDTDate," ",V.Local.sDTDate)
		F.Data.Datatable.SetValue("dtTA",V.Local.iCnt,"Date",V.Local.sDTDate(0).Trim)
	F.Intrinsic.Control.Else
		F.Data.Datatable.SetValue("dtTA",V.Local.iCnt,"Date",V.Local.sDTDate)
	F.Intrinsic.Control.EndIf
		
	F.Intrinsic.String.Left(V.DataTable.dtTA(V.Local.iCnt).CHARGE_TIME!FieldValTrim,2,V.Local.sHH)
	F.Intrinsic.String.Right(V.DataTable.dtTA(V.Local.iCnt).CHARGE_TIME!FieldValTrim,2,V.Local.sNN)
	
	F.Intrinsic.Control.If(V.Local.sHH,>=,12)
		F.Intrinsic.Control.If(V.Local.sHH,>=,13)
			F.Intrinsic.Math.Sub(V.Local.sHH,12,V.Local.sHH)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.String.Build("{0}:{1} PM",V.Local.sHH,V.Local.sNN,V.Local.sDTTime)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}:{1} AM",V.Local.sHH,V.Local.sNN,V.Local.sDTTime)
	F.Intrinsic.Control.EndIf
	
	F.Data.Datatable.SetValue("dtTA",V.Local.iCnt,"Time",V.Local.sDTTime)
	
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Data.Datatable.RemoveColumn("dtTA","CHARGE_DATE")
F.Data.Datatable.RemoveColumn("dtTA","CHARGE_TIME")

V.Local.iCnt.Set(0)

'Balance change
F.Intrinsic.String.Build("Select A.EMPLOYEE as 'Employee', IF(A.FIELD_NAME = 'Time In',B.DATE_IN,B.DATE_OUT) as 'CHARGE_DATE','01/01/1900' as 'Date',' '  as 'Punch Type', A.AFTER as 'CHARGE_TIME','00:00' as 'Time',B.SHIFT,IF(A.FIELD_NAME = 'Time In',B.IN_TS_MIN,B.OUT_TS_MIN)  as 'TS_MIN' from BALANCE_CHANGE A Inner Join TIME_ATTENDANCE B on A.CHANGE_DATE = B.DATE_LAST_CHG and LEFT(A.CHANGE_TIME,6) = LEFT(B.TIME_LAST_CHG,6) Left Join V_EMPLOYEE_MSTR C on A.EMPLOYEE = C.EMPLOYEE where C.CONTRACT_EMP <> 'Y' and A.CHANGE_DATE >= '{0}' and A.CHANGE_DATE < '{1}' and B.LAST_CHG_PROG = 'JB033A' and A.FIELD_NAME in ('Time In','Time Out') AND LEFT(BEFORE,5) <> LEFT(AFTER,5);",V.Local.sDateTime,V.Ambient.Date.FormatYYYYMMDD, V.Local.sSQL)

F.Data.Datatable.CreateFromSQL("dtBC","conts",V.Local.sSQL)

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtBC.RowCount--,1)
	F.Intrinsic.String.Left(V.DataTable.dtBC(V.Local.iCnt).CHARGE_DATE!FieldValTrim,4,V.Local.sYYYY)
	F.Intrinsic.String.Mid(V.DataTable.dtBC(V.Local.iCnt).CHARGE_DATE!FieldValTrim,5,2,V.Local.sMM)
	F.Intrinsic.String.Right(V.DataTable.dtBC(V.Local.iCnt).CHARGE_DATE!FieldValTrim,2,V.Local.sDD)
	F.Intrinsic.String.Build("{0}/{1}/{2}",V.Local.sMM,V.Local.sDD,V.Local.sYYYY,V.Local.sDTDate)
	F.Intrinsic.Control.If(V.DataTable.dtBC(V.Local.iCnt).SHIFT!FieldValTrim,=,3,"AND",V.DataTable.dtBC(V.Local.iCnt).Punch Type!FieldValTrim,=,"IN")
		F.Intrinsic.Date.DateAdd("d",-1,V.Local.sDTDate,V.Local.sDTDate)
		F.Intrinsic.String.Split(V.Local.sDTDate," ",V.Local.sDTDate)
		F.Data.Datatable.SetValue("dtBC",V.Local.iCnt,"Date",V.Local.sDTDate(0).Trim)
	F.Intrinsic.Control.Else
		F.Data.Datatable.SetValue("dtBC",V.Local.iCnt,"Date",V.Local.sDTDate)
	F.Intrinsic.Control.EndIf
	
	V.Local.sDTTime.Set(V.DataTable.dtBC(V.Local.iCnt).CHARGE_TIME!FieldValTrim)
	F.Intrinsic.String.Left(V.Local.sDTTime,5,V.Local.sDTTime)
	F.Intrinsic.String.Left(V.Local.sDTTime,2,V.Local.sHH)
	F.Intrinsic.String.Right(V.Local.sDTTime,2,V.Local.sNN)
	F.Intrinsic.Control.If(V.Local.sHH,>=,12)
		F.Intrinsic.Control.If(V.Local.sHH,>=,13)
			F.Intrinsic.Math.Sub(V.Local.sHH,12,V.Local.sHH)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.String.Build("{0}:{1} PM",V.Local.sHH,V.Local.sNN,V.Local.sDTTime)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}:{1} AM",V.Local.sHH,V.Local.sNN,V.Local.sDTTime)
	F.Intrinsic.Control.EndIf
	
	F.Data.Datatable.SetValue("dtBC",V.Local.iCnt,"Time",V.Local.sDTTIME)
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Data.Datatable.RemoveColumn("dtBC","CHARGE_DATE")
F.Data.Datatable.RemoveColumn("dtBC","CHARGE_TIME")

F.Intrinsic.String.Format(V.Ambient.Date,"YYYYMMDD",V.Local.sRunDate)
F.Intrinsic.String.Format(V.Ambient.Time,"HHNNSSSS",V.Local.sRunTime)

F.Intrinsic.String.Build("Update GCG_6752_SETTINGS set DATE_LAST_CHG = '{0}',TIME_LAST_CHG = '{1}' where REC_ID = '1'",V.Local.sRunDate,V.Local.sRunTime,V.Local.sSQL)
F.ODBC.Connection!conts.Execute(V.Local.sSQL)

F.Data.Datatable.Merge("dtBC","dtTA",True,1)

F.Data.Datatable.RemoveColumn("dtTA","TS_MIN")
F.Data.Datatable.RemoveColumn("dtTA","SHIFT")

F.ODBC.Connection!conts.Close

F.Intrinsic.String.Right(V.Local.sChgDate,6,V.Local.sChgDate)
F.Intrinsic.String.Left(V.Local.sChgTime,4,V.Local.sChgTime)

F.Intrinsic.String.Build("Paycom_{0}_{1}{2}.csv",V.Caller.CompanyCode,V.Local.sChgDate,V.Local.sChgTime,V.Global.sFile)

F.Intrinsic.String.Build("{0}\{1}",V.Global.sDir,V.Global.sFile,V.Global.sPath)

F.Data.Datatable.SaveToCSV("dtTA",V.Global.sPath,True)
Function.Intrinsic.Debug.InvokeDebugger
Function.Intrinsic.Debug.Stop

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6752", "ProjectTitle", "Paycom Data Upload", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Data.End

Program.Sub.FileUpload.Start
F.Intrinsic.Control.Try
V.Local.sRemoteHost.Declare
V.Local.sRemoteUser.Declare
V.Local.sRemotePwd.Declare
V.Local.sRemotePort.Declare
V.Local.sRemotePath.Declare
V.Local.sTemp.Declare
V.Local.baValue.Declare(ByteArray)

F.Intrinsic.Control.If(V.DataTable.dtSettings.Exists)
	F.Data.Datatable.Close("dtSettings")
F.Intrinsic.Control.EndIf

'Connection settings
F.ODBC.Connection!conts.OpenCompanyConnection

F.Data.Datatable.CreateFromSQL("dtSettings","conts","Select * from GCG_6752_SETTINGS where REC_ID = '1' AND PAYCOM_TO_GSS = 'N' ")

F.ODBC.Connection!conts.Close

F.Intrinsic.Control.If(V.DataTable.dtSettings.RowCount,=,0)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

V.Local.sTemp.Set(V.DataTable.dtSettings(0).RemoteHost!FieldValTrim)
F.Intrinsic.String.ConvertString2BA(V.Local.sTemp,V.Local.baValue)
F.Global.Encryption.Decrypt(V.Local.baValue,V.Local.sTemp)
V.Local.sRemoteHost.Set(V.Local.sTemp)

V.Local.sTemp.Set(V.DataTable.dtSettings(0).RemoteUser!FieldValTrim)
F.Intrinsic.String.ConvertString2BA(V.Local.sTemp,V.Local.baValue)
F.Global.Encryption.Decrypt(V.Local.baValue,V.Local.sTemp)
V.Local.sRemoteUser.Set(V.Local.sTemp)

V.Local.sTemp.Set(V.DataTable.dtSettings(0).RemotePassword!FieldValTrim)
F.Intrinsic.String.ConvertString2BA(V.Local.sTemp,V.Local.baValue)
F.Global.Encryption.Decrypt(V.Local.baValue,V.Local.sTemp)
V.Local.sRemotePwd.Set(V.Local.sTemp)

V.Local.sTemp.Set(V.DataTable.dtSettings(0).RemotePort!FieldValTrim)
F.Intrinsic.String.ConvertString2BA(V.Local.sTemp,V.Local.baValue)
F.Global.Encryption.Decrypt(V.Local.baValue,V.Local.sTemp)
V.Local.sRemotePort.Set(V.Local.sTemp)

V.Local.sTemp.Set(V.DataTable.dtSettings(0).RemotePath!FieldValTrim)
F.Intrinsic.String.ConvertString2BA(V.Local.sTemp,V.Local.baValue)
F.Global.Encryption.Decrypt(V.Local.baValue,V.Local.sTemp)
V.Local.sRemotePath.Set(V.Local.sTemp)

V.Global.sDelFile.Set(V.DataTable.dtSettings(0).DEL_FILE!FieldValTrim)

'SFTP logon credentials.
F.Communication.SFTP.SetProperty("SSHAcceptServerAuthentication","true")
F.Communication.SFTP.SetProperty("remoteHost",V.Local.sRemoteHost.Trim)
F.Communication.SFTP.SetProperty("User",V.Local.sRemoteUser.Trim)
F.Communication.SFTP.SetProperty("Password",V.Local.sRemotePwd.Trim)
F.Communication.SFTP.SetProperty("remotePort",V.Local.sRemotePort)
F.Communication.SFTP.Logon
'File upload
F.Communication.SFTP.SetProperty("RemotePath",V.Local.sRemotePath)
F.Communication.SFTP.SetProperty("RemoteFile",V.Global.sFile)
F.Communication.SFTP.SetProperty("LocalFile",V.Global.sPath)
F.Communication.SFTP.SetProperty("transferMode",2)

F.Communication.SFTP.Upload

F.Intrinsic.Control.AddEventHandler("SFTPDirList","ListDir")

F.Communication.SFTP.ListDirectory

F.Communication.SFTP.Logoff

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6752", "ProjectTitle", "Paycom Data Upload", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.FileUpload.End

Program.Sub.ListDir.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.Global.sDelFile.Trim,=,"Y")
	F.Intrinsic.Control.If(V.Args.filename,=,V.Global.sFile)
		F.Intrinsic.File.DeleteFile(V.Global.sPath)	
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6752", "ProjectTitle", "Paycom Data Upload", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.ListDir.End

Program.Sub.f_Main_UnLoad.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6752", "ProjectTitle", "Paycom Data Upload", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.f_Main_UnLoad.End

Program.Sub.ErrorMessage.Start
'basic error message for replacing catch block
'this is really just for when printing the message and ending program
'pass error number, error description, current subroutine
'optional callback sub, this will be called before ending
'optional unattended parameters, those subs may not exist if not using them but won't be called
F.Intrinsic.Control.Try

V.Local.iError.Declare(Long)
V.Local.sErrorDescription.Declare(String)
V.Local.sSubroutine.Declare(String)
V.Local.sError.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sCallback.Declare(String)

V.Local.iError.Set(V.Args.ErrorNumber)
V.Local.sErrorDescription.Set(V.Args.ErrorDescription)
V.Local.sSubroutine.Set(V.Args.Subroutine)

'make sure we aren't in an error loop
F.Intrinsic.Control.If(V.Global.bError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf
V.Global.bError.Set(True)

F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Local.sSubroutine, V.Local.iError, V.Local.sErrorDescription, V.Ambient.GABVersion, V.Local.sError)

F.Intrinsic.Variable.ArgExists("UNATTENDED", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.Control.If(V.Args.UNATTENDED)
		F.Intrinsic.Control.CallSub(UnattendedErrorMessage, "MESSAGE", V.Local.sError, "PROJECT", V.Args.PROJECT, "PROJECTTITLE", V.Args.PROJECTTITLE)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.ArgExists("Callback", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	V.Local.sCallback.Set(V.Args.Callback.Trim)
	F.Intrinsic.Control.CallSub(V.Local.sCallback)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Caller.ScriptFile,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndTry
Program.Sub.ErrorMessage.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$acollins$}$20220518162725123$}$h98hERc2yV72q0GaUGlwSaoK/aefTdVk/XotSp2jZHi8jHxaGy+E6x7dMafSlZrY1pubEaVz5AzI5IdDRDtrOA==
Program.Sub.Comments.End